library(binomial)
test_that("check_success works as expected",{
expect_true(check_success(1:4, 5))
expect_error(check_success(5, -3))
expect_error(check_success(5, 2.5))
expect_error(check_success(6, 5))
expect_error(check_success(c(1, 2.3), 2))
})
library(testthat)
test_that("check_success works as expected",{
expect_true(check_success(1:4, 5))
expect_error(check_success(5, -3))
expect_error(check_success(5, 2.5))
expect_error(check_success(6, 5))
expect_error(check_success(c(1, 2.3), 2))
})
check_success = function(success, trials){
if (is.numeric(success) != TRUE| sum(as.integer(success) == success) <= 0){
stop("success values must be numeric and whole")
}
if (sum(success < 0) > 0){
stop("success cannot be non-negative")
}
if (sum(success > trials)>0){
stop("success cannot be greater than trials")
}
else{
return(TRUE)
}
}
test_that("check_success works as expected",{
expect_true(check_success(1:4, 5))
expect_error(check_success(5, -3))
expect_error(check_success(5, 2.5))
expect_error(check_success(6, 5))
expect_error(check_success(c(1, 2.3), 2))
})
